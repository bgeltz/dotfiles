#!/bin/bash

set -e

usage() {
cat << EOF
Usage: ${0} [-h] [-c] [-d] [-i] [-t]
    Build the code
Options:
    -c : Start with make clean
    -d : Force default (GNU) environment build (autogen, configure, ...)
    -i : Force Intel environment build
    -t : Run all the unit tests after compiling
    -h : Print this page
EOF
}

BUILD_TIMESTAMP=${TIMESTAMP:-$(date +%F_%H%M.%S)}
export BIN_PATH=${HOME}/build

while getopts "hcditgq" opt; do
    case $opt in
        h)
            usage
            exit
            ;;
        c)
            export MAKE_CLEAN=1
            ;;
        d)
            export FORCE_DEFAULTS=1
            ;;
        i)
            export FORCE_INTEL=1
            ;;
        t)
            export RUN_TESTS=1
            ;;
        g)
            export FORCE_DEBUG=1
            ;;
        q)
            export QUIET=1
            ;;
        \?)
            usage
            exit
            ;;
    esac
done

if [ ! -d "${BIN_PATH}/build_logs" ]; then
    mkdir -p ${BIN_PATH}/build_logs
fi

LOGFILE=${BIN_PATH}/build_logs/build.${BUILD_TIMESTAMP}.log
ln -sf ${LOGFILE} ${BIN_PATH}/build_latest.log

if [ -n "${QUIET}" ]; then
    unbuffer go1 > ${LOGFILE} 2>&1
else
    set -o pipefail
    unbuffer go1 2>&1 | tee ${LOGFILE}
    set +o pipefail
fi

